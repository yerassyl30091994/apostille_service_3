{
  "name": "gulp-css-base64",
  "description": "Gulp's task for transform all resources found in a CSS into base64-encoded data URI strings",
  "version": "1.3.4",
  "homepage": "http://github.com/zckrs/gulp-css-base64",
  "repository": {
    "type": "git",
    "url": "zckrs/gulp-css-base64.git"
  },
  "bugs": {
    "url": "http://github.com/zckrs/gulp-css-base64/issues",
    "email": "mdara@eleven-labs.com"
  },
  "author": {
    "name": "Mehdy Dara",
    "email": "mdara@eleven-labs.com",
    "url": "http://eleven-labs.com/"
  },
  "contributors": [
    {
      "name": "Mehdy Dara",
      "email": "mdara@eleven-labs.com",
      "url": "http://eleven-labs.com/"
    },
    {
      "name": "Callum Jefferies",
      "email": "callum.jefferies@gmail.com",
      "url": "http://callumj.uk/"
    }
  ],
  "files": [
    "src"
  ],
  "main": "./src/index.js",
  "keywords": [
    "gulpplugin",
    "css",
    "base64"
  ],
  "dependencies": {
    "async": "^1.5.0",
    "buffers": "^0.1.1",
    "chalk": "^1.1.1",
    "gulp-util": "^3.0.3",
    "mime": "^1.3.4",
    "request": "^2.67.0",
    "through2": "^2.0.0"
  },
  "devDependencies": {
    "coveralls": "^2.11.2",
    "eslint": "^1.10.3",
    "eslint-config-xo-space": "^0.7.0",
    "event-stream": "^3.3.2",
    "istanbul": "^0.4.1",
    "mocha": "^2.3.4",
    "mocha-lcov-reporter": "^1.0.0"
  },
  "scripts": {
    "test": "eslint . && mocha --reporter spec",
    "coveralls": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage",
    "cover": "istanbul cover ./node_modules/mocha/bin/_mocha --report html -- test/*.js -R spec -t 5000"
  },
  "license": "MIT",
  "eslintConfig": {
    "extends": "xo-space",
    "env": {
      "mocha": true
    }
  },
  "readme": "# gulp-css-base64\n\n[![Build Status](http://img.shields.io/travis/zckrs/gulp-css-base64.svg?style=flat)](https://travis-ci.org/zckrs/gulp-css-base64)\n[![Coverage Status](http://img.shields.io/coveralls/zckrs/gulp-css-base64.svg?style=flat)](https://coveralls.io/r/zckrs/gulp-css-base64?branch=master)\n[![Dependencies](http://img.shields.io/david/zckrs/gulp-css-base64.svg?style=flat)](https://david-dm.org/zckrs/gulp-css-base64) [![NPM Version](http://img.shields.io/npm/v/gulp-css-base64.svg?style=flat)](https://www.npmjs.org/package/gulp-css-base64) [![Download Month](http://img.shields.io/npm/dm/gulp-css-base64.svg?style=flat)](https://www.npmjs.org/package/gulp-css-base64)\n[![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/zckrs/gulp-css-base64?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThis gulp task converts all data found within a stylesheet (those within a url( ... ) declaration) into base64-encoded data URI strings. This includes images and fonts.\n\nInspired by [grunt-image-embed](https://github.com/ehynds/grunt-image-embed) and written following [gulp's guidelines](https://github.com/gulpjs/gulp/tree/master/docs/writing-a-plugin).\n\n## Features\n\n* Supports local and remote resources.\n* Supports buffer (and stream **WIP**).\n* [[>]](#optionsbasedir) Ability to define a relative base directory to gulpfile.js. Default is the current directory.\n* [[>]](#optionsmaxweightresource) Ability to specify a weight limit. Default is 32kB which is IE8's limit.\n* [[>]](#optionsextensionsallowed) Ability to filter on file extensions. Default there is no filter.\n* [[>]](#ignore-a-specific-resource) Ignore a resource by specifying a directive comment in CSS.\n* Existing data URIs will be ignored.\n* Existing SVG masks will be ignored.\n\n## Install\n\nInstall this plugin with the command:\n\n```js\nnpm install --save-dev gulp-css-base64\n```\n\n## Usage\n\n```js\nvar cssBase64 = require('gulp-css-base64');\n\n//Without options\ngulp.task('default', function () {\n    return gulp.src('src/css/input.css')\n        .pipe(cssBase64())\n        .pipe(gulp.dest('dist'));\n});\n\n//With options\ngulp.task('default', function () {\n    return gulp.src('src/css/input.css')\n        .pipe(cssBase64({\n            baseDir: \"../../images\",\n            maxWeightResource: 100,\n            extensionsAllowed: ['.gif', '.jpg']\n        }))\n        .pipe(gulp.dest('dist'));\n});\n```\n\n## Options\n\n#### options.baseDir\nType: `String`\n\nDefault value: ``\n\nNote: If you have absolute image paths in your stylesheet, the path specified in this option will be used as the base directory. By default plugin used the current directory of gulpfile.js to find local resources.\n\n#### options.maxWeightResource\nType: `Number`\n\nDefault value: `32768`\n\n#### options.extensionsAllowed\nType: `Array`\n\nDefault value: `[]`\n\n## Ignore a specific resource\n\nYou can ignore a resource with a comment `/*base64:skip*/` in CSS file after url definition.\n```css\n.ignored{\n  background: url(image.png); /*base64:skip*/\n}\n.encoded{\n  background: url(image.jpg);\n}\n```\n\n## License\nCopyright (c) 2014 [Mehdy Dara](https://github.com/zckrs) under the MIT License.\n",
  "readmeFilename": "README.md",
  "_id": "gulp-css-base64@1.3.4",
  "dist": {
    "shasum": "77596b7d87ae47c0e6bc48f03e52812b42ad9266"
  },
  "_from": "gulp-css-base64@^1.3.1",
  "_resolved": "http://registry.npmjs.org/gulp-css-base64/-/gulp-css-base64-1.3.4.tgz"
}
