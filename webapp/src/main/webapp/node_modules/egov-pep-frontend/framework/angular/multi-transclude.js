/*

Поддержка множественной трансклюзии

Transclusion - перенос содержания директивы в её определение (шаблон + модель) для отображения внутри директивы.

Использование
-------------

    Здесь приведён пример использования множественной трансклюзии в пользовательской директиве contentWithFooterAndHeader, которая
отображает своё содержимое внутри произвольного хедера и футера. Стандарным ангуляровским ng-transclude их было бы невозможно поместить в
различные участки шаблона директивы contentWithFooterAndHeader.

index.html

<contentWithFooterAndHeader transclude-context>
<div>Main content</div>
<div transclude-to="header-content">Header</div>
<div transclude-to="footer-content">Footer</div>
</contentWithFooterAndHeader>

contentWithFooterAndHeader.html

<div class='header' transclude-for="header-content"></div>
    <div class='content' ng-transclude></div>
    <div class='footer' transclude-for="footer-content"></div>

Примечения
----------
Если на одно значение transclude-for соответсвует несколько значений transclude-to, то они будут добавлены один за другим.

*/

app
    .directive('transcludeTo', function () {
        return {
            restrict: 'A',
            require: '^transcludeContext'
        };
    })
    .directive('transcludeFor', function () {
        return {
            restrict: 'A'
        }
    })
    .directive('transcludeContext', function () {
        return {
            restrict: 'A',
            controller: function ($scope, $element) {
                this.element = $element;
            },
            link: function ($scope, $element) {
                var srcElems = $element.find('[transclude-to]');
                _.each(srcElems, function (elem) {
                    $elem = angular.element(elem);
                    var key = $elem.attr('transclude-to');
                    var $dest = $element.find('[transclude-for=' + key + ']');
                    $elem.appendTo($dest);
                });
            }
        }
    });
