/**
 * Временный файл для сведения общих частей контроллеров заявок.
 */

angular.module("app").service('$declarationUtils', [ '$http', '$q', '$rootScope', '$session', '$robot', '$declaration', '$eds', '$modal', '$error',
    function ($http, $q, $rootScope, $session, $robot, $declaration, $eds, $modal, $error) {


        this.signP80 = function() {
            $eds.open('sign', {
                filter: [ 'fl' ],
                onCert: function (cert) {


                    var apply = (function () {
                        $http.post("rest/app/xml", $declaration.model.data).then(function (rs) {
                                $eds.apply('sign', rs.data.xml);
                            },
                            $declaration.onSignError
                        );
                    }).bind(this);


                    if($session.operator){
                    } else if (!$session.uin){
                        $declaration.model.data.declarantUin = cert.uin;
                        apply();
                    } else {
                        $declaration.model.data.declarantUin = $session.uin;
                    }
                },
                onSign: function (signedXml) {
                    $http.post("rest/app/send-eds" + "?captchaCode=" + $rootScope.captchaCode, { xml: signedXml })
                        .success(function (data) {
                            $declaration.model.signed = true;
                            $declaration.requestId = data.requestNumber;
                            $declaration.getCurrentState(function () {
                                $declaration.goStep('status');
                            });
                            console.log("Заявка принята")
                        }).error(function (rs) {
                            $declaration.model.signed = false;
                            $declaration.onSignError(rs);
                        });
                }
            });
        };

        this.signP511 = function(){
            $eds.cancel('sign');
            $eds.open('sign', {
                onCert: function (cert) {

                    // если не авторизован и не ЦОН
                    if (!$session.uin && !$session.operator) {
                        cert.isIin == 'IIN' ? $declaration.model.uin = cert.iin : $declaration.model.uin = cert.bin;
                    }
                    else if ($session.uin && $session.operator) { // если авторизован ЦОН
                        $declaration.model.declarationType == "fl" ? $declaration.model.uin = $declaration.model.iin : $declaration.model.uin = $declaration.model.bin;
                        $http.post("rest/current-user/change-declarant-iin-bin", {"uin": $declaration.model.uin}).then(function (data) {
                            $declaration.model.declarant = data;
                        });
                    }
                    else {
                        $declaration.model.uin = $session.uin;
                    }

                    if ($declaration.validCadastral === true) {
                        appSign();
                    }
                    else {
                        $http.get("rest/ais-gzk/cadastral/" + $declaration.model.cadastral + "/" + $declaration.model.uin)
                            .success(function (data) {
                                $declaration.model.appSign();
                            }).error(function (rs, status) {
                                if (status === 400) {
                                    $error.setError('По Вашему запросу в Государственной базе данных информация не найдена. Пожалуйста, проверьте введённые данные.');
                                }
                                else {
                                    $error.setError('Во время обработки запроса произошла техническая ошибка. Пожалуйста, попробуйте отправить Ваш запрос позднее.');
                                }
                            });
                    }
                },
                onSign: function (signedXml) {
                    $http.post("rest/app/send-eds" + "?captchaCode=" + $rootScope.captchaCode, { xml: signedXml })
                        .success(function (data) {
                            $declaration.model.signed = true;
                            $declaration.requestId = data.requestNumber;
                            $declaration.getCurrentState();
                            $declaration.goStep('status');
                        }).error(function (rs) {
                            $declaration.model.signed = false;
                            $declaration.onSignError(rs);
                        });
                }
            });
        };

        this.signP316 = function(){
            $eds.cancel('sign');
            $eds.open('sign', {
                filter: [ 'fl' ],
                onCert: function (cert) {
                    $declaration.model.appSign();
                    console.log("Заявка принята");
                },
                onSign: function (signedXml) {
                    $http.post("rest/app/send-eds" + "?captchaCode=" + $rootScope.captchaCode, { xml: signedXml })
                        .success(function (data) {
                            console.log("Заявка отправлена");
                            $declaration.model.signed = true;
                            $declaration.requestId = data.requestNumber;
                            $declaration.getCurrentState();
                            $declaration.goStep('status');
                        }).error(function (rs) {
                            $declaration.model.signed = false;
                            $declaration.onSignError(rs);
                        });
                    console.log("Заявка отправлена");

                }
            });
        };

        this.signSR11 = function(){
            $eds.cancel('sign');
            $eds.open('sign', {
                filter: [ 'fl' ],
                onCert: function (cert) {
                    $declaration.onSignError
                    console.log("Заявка принята");
                    $declaration.goStep('status');
                },
                onSign: function () {
                    console.log("Заявка отправлена");
                }
            });
        };

        this.clearStepsA1 = function(){
            $declaration.clearSteps = function () {
                var currentStep = $declaration.currentStep().id;

                switch (currentStep) {
                    case 'search':
                        $eds.cancel('sign');
                        $declaration.clearStepHistoryAccording(currentStep);
                        break;
                }
            }
        };

        return this;
    }]);