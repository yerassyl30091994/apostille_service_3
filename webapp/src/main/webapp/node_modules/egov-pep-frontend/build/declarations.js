angular.module("app").controller("binSearchDeclarationController",["$scope","$http","$injector","$rootScope","$declaration","$uin","$session","$q","$router",function($scope,$http,$injector,$rootScope,$declaration,$uin,$session,$q,$router){$declaration.onLoaded(function(){$declaration.init($router.getActiveLocation().get.context,{data:{"@declarantUin":"","@bin":""}}),$declaration.onStep("sign",function(){$declaration.signByIndividual(function(){var defer=$q.defer();return defer.resolve(),defer.promise})}),$declaration.onStep("status",function(){$declaration.getCurrentState()}),$declaration.allowStep("search",function(){return!$declaration.requestId}),$declaration.allowStep("sign",function(){return!$declaration.requestId&&$declaration.model.data.bin&&($session.operator&&$declaration.model.data.declarantUin||!$session.operator)}),$declaration.allowStep("status",function(){return!!$declaration.requestId})})}]),angular.module("app").service("$declarationUtils",["$http","$q","$rootScope","$session","$robot","$declaration","$eds","$modal","$error",function($http,$q,$rootScope,$session,$robot,$declaration,$eds,$modal,$error){return this.signP80=function(){$eds.open("sign",{filter:["fl"],onCert:function(cert){var apply=function(){$http.post("rest/app/xml",$declaration.model.data).then(function(rs){$eds.apply("sign",rs.data.xml)},$declaration.onSignError)}.bind(this);$session.operator||($session.uin?$declaration.model.data.declarantUin=$session.uin:($declaration.model.data.declarantUin=cert.uin,apply()))},onSign:function(signedXml){$http.post("rest/app/send-eds?captchaCode="+$rootScope.captchaCode,{xml:signedXml}).success(function(data){$declaration.model.signed=!0,$declaration.requestId=data.requestNumber,$declaration.getCurrentState(function(){$declaration.goStep("status")}),console.log("Заявка принята")}).error(function(rs){$declaration.model.signed=!1,$declaration.onSignError(rs)})}})},this.signP511=function(){$eds.cancel("sign"),$eds.open("sign",{onCert:function(cert){$session.uin||$session.operator?$session.uin&&$session.operator?("fl"==$declaration.model.declarationType?$declaration.model.uin=$declaration.model.iin:$declaration.model.uin=$declaration.model.bin,$http.post("rest/current-user/change-declarant-iin-bin",{uin:$declaration.model.uin}).then(function(data){$declaration.model.declarant=data})):$declaration.model.uin=$session.uin:"IIN"==cert.isIin?$declaration.model.uin=cert.iin:$declaration.model.uin=cert.bin,$declaration.validCadastral===!0?appSign():$http.get("rest/ais-gzk/cadastral/"+$declaration.model.cadastral+"/"+$declaration.model.uin).success(function(data){$declaration.model.appSign()}).error(function(rs,status){400===status?$error.setError("По Вашему запросу в Государственной базе данных информация не найдена. Пожалуйста, проверьте введённые данные."):$error.setError("Во время обработки запроса произошла техническая ошибка. Пожалуйста, попробуйте отправить Ваш запрос позднее.")})},onSign:function(signedXml){$http.post("rest/app/send-eds?captchaCode="+$rootScope.captchaCode,{xml:signedXml}).success(function(data){$declaration.model.signed=!0,$declaration.requestId=data.requestNumber,$declaration.getCurrentState(),$declaration.goStep("status")}).error(function(rs){$declaration.model.signed=!1,$declaration.onSignError(rs)})}})},this.signP316=function(){$eds.cancel("sign"),$eds.open("sign",{filter:["fl"],onCert:function(cert){$declaration.model.appSign(),console.log("Заявка принята")},onSign:function(signedXml){$http.post("rest/app/send-eds?captchaCode="+$rootScope.captchaCode,{xml:signedXml}).success(function(data){console.log("Заявка отправлена"),$declaration.model.signed=!0,$declaration.requestId=data.requestNumber,$declaration.getCurrentState(),$declaration.goStep("status")}).error(function(rs){$declaration.model.signed=!1,$declaration.onSignError(rs)}),console.log("Заявка отправлена")}})},this.signSR11=function(){$eds.cancel("sign"),$eds.open("sign",{filter:["fl"],onCert:function(cert){$declaration.onSignError,console.log("Заявка принята"),$declaration.goStep("status")},onSign:function(){console.log("Заявка отправлена")}})},this.clearStepsA1=function(){$declaration.clearSteps=function(){var currentStep=$declaration.currentStep().id;switch(currentStep){case"search":$eds.cancel("sign"),$declaration.clearStepHistoryAccording(currentStep)}}},this}]),angular.module("app").controller("periodicDeclaration",["$scope","$http","$injector","$rootScope","$declaration","$session","$q","$router",function($scope,$http,$injector,$rootScope,$declaration,$session,$q,$router){$declaration.onLoaded(function(){$declaration.init($router.getActiveLocation().get.context,{data:{declarantUin:"",startDate:moment().subtract(6,"months").toDate(),endDate:moment().toDate(),selectedPeriod:!0},availableFL:!1}),$declaration.onStep("sign",function(){$declaration.signByIndividual(function(){var defer=$q.defer();return defer.resolve(),defer.promise})}),$declaration.onStep("status",function(){$declaration.getCurrentState()}),$declaration.allowStep("search",function(){return!$declaration.requestId}),$declaration.allowStep("sign",function(){var now=moment();if(moment($declaration.model.data.startDate).isBefore(now)&&moment($declaration.model.data.endDate).isBefore(now)&&moment($declaration.model.data.startDate).isBefore(moment($declaration.model.data.endDate)))var isValidDateRange=!0;return!$declaration.requestId&&isValidDateRange&&($session.operator&&$declaration.model.data.declarantUin||!$session.operator)}),$declaration.allowStep("status",function(){return!!$declaration.requestId})})}]),angular.module("app").controller("relationshipDeclarationController",["$scope","$http","$injector","$rootScope","$declaration","$eds","$robot","$sound","$locales","$session","$dictionary","$timeout","$zags","$q",function($scope,$http,$injector,$rootScope,$declaration,$eds,$robot,$sound,$locales,$session,$dictionary,$timeout,$zags,$q){$declaration.onLoaded(function(){$declaration.init("P3.061",{data:{"@declarantUin":"","@iin":"","@relationship":"SELF"},zagsError:null}),$scope.$watch("$declaration.model.data.relationship",function(){$declaration.model.zagsError=null}),$declaration.onStep("sign",function(){$declaration.model.zagsError=null,$declaration.signByIndividual(function(){var defer=$q.defer();return $session.operator?($declaration.model.data.iin=$declaration.model.data.declarantUin,defer.resolve()):"SELF"==$declaration.model.data.relationship?($declaration.model.data.iin=$declaration.model.data.declarantUin,defer.resolve()):"SELF"!=$declaration.model.data.relationship&&$zags.validateRelation($declaration.model.data.iin,$declaration.model.data.relationship,$declaration.model.data.declarantUin).then(function(){defer.resolve()},function(message){$declaration.goStep("search"),$declaration.model.zagsError=message,defer.reject(message)}),defer.promise})}),$declaration.onStep("status",function(){$declaration.getCurrentState()}),$declaration.allowStep("search",function(){return!$declaration.requestId}),$declaration.allowStep("sign",function(){var iinValid=!$session.operator&&"SELF"==$declaration.model.data.relationship||!$session.operator&&"SELF"!=$declaration.model.data.relationship&&$declaration.model.data.iin||$session.operator&&$declaration.model.data.declarantUin;return!$declaration.requestId&&iinValid&&($session.operator&&$declaration.model.data.declarantUin||!$session.operator)}),$declaration.allowStep("status",function(){return!!$declaration.requestId})})}]),angular.module("app").directive("captcha117",["$http","$dictionary","$declaration","$locales","$rootScope","$robot","$error",function($http,$dictionary,$declaration,$locales,$rootScope,$robot,$error){return{scope:{disable:"=",callback:"="},replace:!0,restrict:"E",transclude:!0,templateUrl:"app/declarations/p1-17/directives/captcha-117/captcha.html",link:function(scope,elm,attrs){function updateCaptcha(){d=new Date,$("#captcha_picture").attr("src","captcha?"+d.getTime())}scope.callback||function(){console.log("nothing")};updateCaptcha(),scope.checkCaptchaAndGoToStep=function(){var params={captchaCode:scope.code};$http.post("rest/captcha/check-captcha",params).success(function(data){data.rightCaptcha?($error.resetError(),updateCaptcha(),$rootScope.captchaCode=scope.code,$declaration.loadTaxes()):($error.setError("captcha.error.incorrectcaptcha"),updateCaptcha())}).error(function(rs,status){$error.setError("captcha.error.serverError")}),$("#input_captcha").val("")},scope.updateCaptchaCode=function(){updateCaptcha()}}}}]),app.controller("controller_p1_17",["$scope","$http","$injector","$rootScope","$declaration","$eds","$robot","$sound","$session","$modal","$dictionary","$timeout","$filter","$error","$q","$locales","$translate",function($scope,$http,$injector,$rootScope,$declaration,$eds,$robot,$sound,$session,$modal,$dictionary,$timeout,$filter,$error,$q,$locales,$translate){$declaration.onLoaded(function(){$scope.person={sppApostilledDocumentId:"",apostilleCode:""},$scope.afterOk=!1,$scope.haveTrueResult=!1,$scope.goInputStep=function(){$scope.applicantIIN=null,$scope.applicantName=null,$scope.applicantSurname=null,$scope.applicantPatronymic=null,$scope.person.sppApostilledDocumentId=null,$scope.person.apostilleCode=null,$declaration.vote.voteState=null,$declaration.goStep("input")},$declaration.init("P1.17",{}),$declaration.loadTaxes=function(){$scope.afterOk=!$scope.afterOk;var id=$scope.person.sppApostilledDocumentId,code=$scope.person.apostilleCode;$http.get("rest/app/restProcess?id="+id+"&code="+code).success(function(rs){$scope.haveTrueResult=!0,$declaration.goStep("status"),console.log(rs),$scope.applicantIIN=rs.applicant.iin,$scope.applicantName=rs.applicant.name,$scope.applicantSurname=rs.applicant.surname,$scope.applicantPatronymic=rs.applicant.patronymic}).error(function(err){$error.resetError(),$scope.haveTrueResult=!1,$declaration.goStep("status")})},$declaration.onStep("status",function(){$declaration.getCurrentState()}),$declaration.allowStep("input",function(){return!!$declaration.requestId}),$declaration.allowStep("status",function(){return!!$declaration.requestId})})}]);