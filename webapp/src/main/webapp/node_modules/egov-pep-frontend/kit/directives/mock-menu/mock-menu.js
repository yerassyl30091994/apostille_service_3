angular.module("app").directive('mockMenu', ['$mockService', '$window', function ($mockService, $window) {
    return {
        restrict: "E",
        scope: {},
        templateUrl: "kit/directives/mock-menu/mock-menu.html",
        link: function ($scope, element, attrs) {

            $scope.scGenConfig = null;

            function initialize() {
                setMenuSizeAndPosition();

                $scope.scGenConfig = new $mockService.classes.ScenarioGenerationConfig();
            }

            function setMenuSizeAndPosition() {
                var menuElement = element.find('.menu');
                var width = $window.innerWidth / 100 * 80;
                var height = $window.innerHeight / 100 * 80;
                var top = $window.innerHeight / 100 * 10;
                var left = $window.innerWidth / 100 * 10;

                menuElement.css('width', width);
                menuElement.css('height', height);
                menuElement.css('top', top);
                menuElement.css('left', left);
            }

            initialize();

            $scope.$mockService = $mockService;

            $scope.contextScenarios = _.filter($mockService.getScenarios(), function (scenario) {
                return scenario.getContext() === window.__contextParams.context;
            });

            $scope.toggleMocking = function() {
                $mockService.setIsEnabled(!$mockService.getIsEnabled());
            }

            $scope.toggleRecording = function() {
                $mockService.setIsRecording(!$mockService.getIsRecording());
            }

            $scope.toggleMenu = function () {
                $scope.showMenu = !$scope.showMenu;
            }

            $scope.printScenario = function() {
                var jsCodeStr = $mockService.printRecordedScenario($scope.scGenConfig);
                element.find('.printed-scenario').text(jsCodeStr);
            }
        }
    }
}]);