angular.module("app").directive('datefield', ['$locales', '$timeout', '$settings', function ($locales, $timeout, $settings) {
    return {
        scope: {
            date: '=',
            id: '@',
            required: '@',
            optional: '@',
            labelHide: '@', //флаг чтобы скрыть title
            minvalue: '@',
            maxvalue: '@',
            showDates: '&'
        },
        replace: true,
        restrict: 'E',
        required: "@id",
        transclude: true,
        templateUrl: "kit/directives/datefield/datefield.html",
        controller: function ($scope) {
            $scope.viewModel = {
                valid: false,
                dateMissing: true,
                dateBadFormat: false,
                dateLtMin: false,
                dateGtMax: false,
                dateFocus: false
            };
        },
        link: function (scope, element, attrs, ngModelController) {

            scope.$settings = $settings;

            if (scope.optional) {
                scope.required = false;
            }

            scope._ = _;
            scope.dateForm = element.find('input').data('ngModelController');

            if (attrs.label) {
                scope.label = attrs.label;
            } else {
                scope.label = "datefield.label";
            }

            function checkDate(date) {

                scope.isHidden = false;
                scope.viewModel.valid = true;
                scope.viewModel.dateMissing = !date || date.length == 0;
                scope.viewModel.dateBadFormat = false;
                scope.viewModel.dateLtMin = false;
                scope.viewModel.dateGtMax = false;
                if (scope.required && scope.viewModel.dateMissing) {
                    scope.viewModel.valid = false;
                    scope.date = null;
                }
                if (!scope.viewModel.dateMissing) {
                    var parsedDate = Date.parse(date);
                    scope.viewModel.dateBadFormat = (parsedDate == null || parsedDate == 'Invalid Date');
                    if (scope.viewModel.dateBadFormat) {
                        scope.viewModel.valid = false;
                        scope.date = null;
                    }
                    if (scope.minvalue) {
                        var minDate = Date.parse(scope.minvalue);
                        if (parsedDate < minDate) {
                            scope.viewModel.valid = false;
                            scope.viewModel.dateLtMin = true;
                            scope.date = null;
                        }
                    }
                    if (scope.maxvalue) {
                        var maxDate = Date.parse(scope.maxvalue);
                        if (parsedDate > maxDate) {
                            scope.viewModel.valid = false;
                            scope.viewModel.dateGtMax = true;
                            scope.date = null;
                        }
                    }
                }
                return true;
            };
            scope.dateInitOptions = {
                'changeYear': true,
                'changeMonth': true,
                'dateFormat': 'dd.mm.yy',
                'maxDate': scope.maxvalue ? new Date (Date.parse(scope.maxvalue)) : null,
                'minDate': scope.minvalue ? new Date (Date.parse(scope.minvalue)) : null,
                'direction': 'up',
                'beforeShowDay': scope.showDates() ? scope.showDates() : null,
                'yearRange': 'c-100:+10'
            };

            scope.$watch(function () {
                return $locales.current();
            }, function (newLocale, oldLocale) {
                if (newLocale) {
                    if(newLocale == 'kz'){
                        newLocale = 'kk';
                    }else if(newLocale == 'en'){
                        newLocale = 'en-GB';
                    }
                    // �������������� ������ ����� ������� �.�. �������� ����������� ������ ��� ���������������� ���� jQuery.datepicker.regional
                    function setRegionalOpts() {
                        var regionalProperties = jQuery.datepicker.regional[newLocale];
                        if (!regionalProperties) {
                            $timeout(function () {
                                setRegionalOpts();
                            }, 500);
                        } else {
                            angular.extend(scope.dateInitOptions, regionalProperties);
                        }
                    }

                    setRegionalOpts();
                }
            });

            scope.$watch('date', function (newValue, oldValue) {
                if (newValue != oldValue) {
                    scope.$value = newValue;
                }
            });
            scope.proc = checkDate;
            scope.dateForm.$setPristine();
            scope.convertToDate = function(string) {
                if (string && string != '') {
                    return Date.parse(string);
                } else {
                    return null;
                }
            }
        }

    }
}]);
