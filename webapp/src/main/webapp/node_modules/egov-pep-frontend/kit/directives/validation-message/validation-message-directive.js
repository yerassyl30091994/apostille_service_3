angular.module("app").directive('validationMessage', [
    function () {
        return {
            scope: {
                errors: '=?',
                warnings: '=?',
                prefix: '@'
            },
            replace: true,
            restrict: 'E',
            transclude: true,
            templateUrl: "kit/directives/validation-message/validation-message-template.html",
            controller: function ($scope) {
            },
            link: function (scope, element, attrs, model) {

                scope.inputFocused = false;
                scope.kbToBottoms = 0;
                scope.blurTimeout = undefined;
                scope.kbWatchdog = undefined;

                element.on('focus', '.__kb_bound', function(e){
                    scope.$apply(function(){
                        scope.inputFocused = true;
                        scope.kbToBottoms = element.find('.__kb_to_bottom').length;
                    });
                    clearTimeout(scope.blurTimeout);
                    scope.blurTimeout = undefined;
                    if (!scope.kbWatchdog) {
                        scope.kbWatchdog = setInterval(function(){
                            scope.$apply(function(){
                                scope.kbToBottoms = element.find('.__kb_to_bottom').length;
                            });
                        }, 200);
                    }
                });
                element.on('blur', '.__kb_bound', function(e){
                    if (!scope.blurTimeout) {
                        scope.blurTimeout = setTimeout(function(){
                            if (!$(e.target).hasClass('__kb_focus')) {
                                scope.$apply(function(){
                                    scope.inputFocused = false;
                                    clearInterval(scope.kbWatchdog);
                                    scope.kbWatchdog = undefined;
                                });
                            }
                        }, 0);
                    }
                });

                function findTrueProperty(val) {
                    return _.find(_.keys(val), function(key){
                        return val[key];
                    });
                }
                scope.$watch('warnings', function(val){
                    var warning = findTrueProperty(val);
                    scope.warning = warning ? (scope.prefix + '.warning.' + warning) : null;
                }, true);
                scope.$watch('errors', function(val){
                    var error = findTrueProperty(val);
                    scope.error = (!scope.warning && error) ? (scope.prefix + '.error.' + error) : null;
                }, true);
            }
        }
    }]);
