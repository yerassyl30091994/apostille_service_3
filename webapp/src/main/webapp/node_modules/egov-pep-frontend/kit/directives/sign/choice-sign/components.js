angular.module("app").directive('egovChoiceSign', ['$declaration', 'egovOTPservice', '$translate','$egovMEds', '$session',
    function ($declaration, egovOTPservice, $translate, $egovMEds, $session) {
    return {
        scope: {
            data: "=" //принимает конечный контракт (все заполненные данные)
        },
        replace: true,
        templateUrl: 'kit/directives/sign/choice-sign/template.html',
        restrict: "E",
        controller: function ($scope, $declaration, $session, $egovChoiceSignService, $http, $error, $eds) {
            var app = egovOTPservice.initApp($scope.app);
            $scope.$egovChoiceSignService = $egovChoiceSignService; //получить данные сервиса в контроллер
            $scope.$egovMEds = $egovMEds;
            $scope.$session = $session;
            $declaration.onStep('sign', function () { //на шаге подписания
                $eds.reset('sign');
                //По умолчанию включен componentVerificationTypes = true
                if ($egovChoiceSignService.componentVerificationTypes) {
                    /*Выбор способа подписания не доступен для юр лиц*/
                    if ($session.organization) { //Если услугу получают ЮЛ лицо то ему сразу показываем ЭЦП.
                        $egovChoiceSignService.vTypes.byEDS = {
                            available: true,
                            show: true,
                            registered: true
                        };
                        $egovChoiceSignService.vTypes.choiceSign = {
                            show: false // true - показываем/ false -не показываем выбор способов подписания
                        };
                        $scope.numberSign = 1; //устанавливаем для количество способов подписания 1, чтобы скрыть кнопку назад
                        $egovChoiceSignService.signByEDS();
                        console.log("Услугу получает ЮЛ, поэтому доступен только ЭЦП");
                    } else if ($declaration.UI() === "POD") { /*Если услугу получают на ПОДе,
                        то в ресте доступности способов подписания не отправляется ИИН, доступность определяется только по услуге*/
                        /*//вызываем рест который возвращает способы подписания {"verificationTypes":["EDS", "M_EDS","OTP"]}
                        Рест поменян из rest/app/verification-types на rest/app/v3/verification-types для того чтобы не поломать МГОВ
                        так как на ПОДе отправляется без ИИН
                        Добавлен rest/app/v3/verification-types он возвращает все доступные в услуге виды подписания, с дополнительными параметрами (registered - будет true или false), указывающие на доступность подписания для пользователя
                        */
                        $http.get("rest/app/v3/verification-types").success(function (rs) {
                            $egovChoiceSignService.numberSign = rs.verificationTypes.length; //узнать количество способов подписания для сервиса
                            $scope.numberSign = rs.verificationTypes.length; //узнать количество способов подписания для контролера
                            $egovChoiceSignService.checkAvailable(rs); //функция проверки доступности выбора способа подписания
                        }).error(function (rs) {
                            /*Для случаев когда рест возвращает ошибку. Делаем ЭЦП доступным*/
                            console.log("rest/app/v3/verification-types вернула ошибку, поэтому доступен только ЭЦП");
                            $egovChoiceSignService.vTypes.choiceSign = {
                                show: false //не показываем // true - показываем/ false -не показываем выбор способов подписания
                            };
                            $egovChoiceSignService.vTypes.byEDS = {
                                available: true, //определеяется доступность подписания по ЭЦП
                                show: true,
                                registered: true
                            };
                        });
                        console.log("Услугу получают на ПОДе или оператор НАО ГК «Правительство для граждан»");
                    } else {/*Остальные случай это когда получает ФЛ и предполоагется что он авторизован*/
                        /*//вызываем рест который возвращает способы подписания {"verificationTypes":["EDS", "M_EDS","OTP"]}*/
                        $http.get("rest/app/v3/verification-types?uin=" + $session.uin).success(function (rs) {
                            $egovChoiceSignService.numberSign = rs.verificationTypes.length; //узнать количество способов подписания для сервиса
                            $scope.numberSign = rs.verificationTypes.length; //узнать количество способов подписания для контролера
                            $egovChoiceSignService.checkAvailable(rs); //функция проверки доступности выбора способа подписания
                        }).error(function (rs) {
                            /*Для случаев когда рест возвращает ошибку. Делаем ЭЦП доступным*/
                            console.log("rest/app/v3/verification-types вернула ошибку, поэтому доступен только ЭЦП");
                            $egovChoiceSignService.vTypes.choiceSign = {
                                show: false //не показываем // true - показываем/ false -не показываем выбор способов подписания
                            };
                            $egovChoiceSignService.vTypes.byEDS = {
                                available: true, //определеяется доступность подписания по ЭЦП
                                show: true,
                                registered: true
                            };
                        });
                        console.log("Услугу получает ФЛ");
                    }
                }
            });

            // Старт био-сканера
            $scope.startScan = function (iin) {
                if (hasConnect) {
                    var regexpUin = new RegExp('^\\d{12}$');
                    var wSocket = new WebSocket("wss://localhost:8443/bio/");

                    wSocket.onmessage = function (event) {
                        if (regexpUin.test(event.data)) {
                            console.log('Bio scan found IIN ' + event.data);
                            $scope.checkRegMBC(event.data);
                        } else {
                            switch (event.data) {
                                case "1":
                                    $scope.checkRegMBC(iin);
                                    break;
                                case "0":
                                    $scope.bioStatus = '0';
                                    break;
                                case "3":
                                    $scope.bioStatus = '3';
                                    break;
                                default :
                                    $scope.bioStatus = '-1';
                            }
                            $scope.$apply();
                        }
                    };

                    wSocket.onerror = function (error) {
                        console.log('Received error response from Bio scanner');
                        $scope.bioStatus = '-1';
                        $scope.$apply();
                    };

                    wSocket.onopen = function (event) {
                        var iinToSend = iin;
                        if (!regexpUin.test(iinToSend)) {
                            iinToSend = '000000000000';
                        }
                        wSocket.send(iinToSend);
                        $scope.showStatus = true;
                        $scope.bioStatus = '';
                    };

                    wSocket.onclose  = function (event) {
                        $scope.bioStatus = '-1';
                        $scope.$apply();
                    };
                } else {
                    $scope.bioStatus = '-1';
                }
            };

            // Проверка номера в МБГ
            $scope.checkRegMBC = function (iin) {
                egovOTPservice.checkRegMBC(app, iin)
                    .then(function (rs) {
                        if (rs.data.errCode === 0) { //Проверка успешно выполнено, пользователь зарегистрирован в МБГ
                            $scope.regStatus = true; //Пользователь зарегистрирован в МБГ, показываем блок отправки кода
                            if($declaration.UI() === "POD") {
                                $scope.phone = "*******" + rs.data.phone.substr(rs.data.phone.length - 4, 4); //На ПОДе показываем только последние 4 цифры
                            } else {
                                $scope.phone = rs.data.phone; //Номер который зарегистрирован на пользователя
                            }
                            $scope.newCode(iin);
                        } else if (rs.data.errCode == 1) { //У пользователя нет зарегистрированных телефонов
                            $scope.bioStatus = '2';
                        } else if (rs.data.errCode == 2) {
                            $error.setError('serverError'); //При запросе в МБГ произошла ошибка
                        }
                    });
            };

            // Отправка одноразового пароля СМС-ом
            $scope.newCode = function (iin) {
                $scope.iin = iin;
                $scope.isResend = false;
                egovOTPservice.newCode(app, iin)
                    .then(function (rs, status) {
                        //console.log(JSON.stringify(rs.data));
                        if (rs.data.errCode === 0) { //Код успешно отправлен пользователю
                            $scope.isResend = true; //Если тру то показать сообщение "Не пришло СМС?"
                            $scope.isSMS = true; //Код успешно отправлен, можно показывать блок ввода смс кода
                            $scope.bioStatus = '1';
                        } else if (rs.data.errCode === 1) { //У пользователя нет зарегистрированных телефонов
                            $scope.errorMessage = true;//Пользователь НЕ зарегистрирован в МБГ, показываем сообщение что пользователь не зарегистрирован
                            $scope.bioStatus = '2';
                        } else if (rs.data.errCode === 2) {
                            $error.setError('serverError'); //При отправке СМС произошла ошибка
                        }
                    });
            };

            $scope.sendCode = function(code) {
                if (egovOTPservice.validateCallBack) {
                    if($declaration.UI() === "POD"){
                        egovOTPservice.validateCallBack($scope.iin).then(function () {
                            sendCode(code);
                        });
                    } else {
                        egovOTPservice.validateCallBack().then(function () {
                            sendCode(code);
                        });
                    };
                } else {
                    sendCode(code);
                }
            };

            function sendCode(code){
                var data = null;
                var iin = $scope.iin ? $scope.iin : null;  //Для ПОДа, когда вводим ИИН, передаем его как параметр
                if(app) {
                    data = egovOTPservice.getDefaults($scope.app);
                    for (var attr in $scope.data) { data[attr] = $scope.data[attr]; }
                }else {
                    data = $scope.data;
                }
                egovOTPservice.sendCode(app, code, iin, data, null, 'bio').
                then(function (rs) {
                    $scope.rid = rs.data.requestNumber;
                    $egovChoiceSignService.otpCb(rs.data.requestNumber);
                }, function(rs){
                    if (rs.status == 400) return $error.setError('egov-otp.badCode');
                    $error.setError('egov-otp.sendError');
                });
            };

            $scope.getSentText = function () {
                return $translate.translate('login.optSent').replace('phone_number', $scope.phone);
            };
        },
        link: function (scope, elem, attrs) {
        }
    };
}]);
