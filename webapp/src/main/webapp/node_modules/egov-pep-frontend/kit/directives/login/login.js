// Подключение к веб-сокету
var hasConnect = false;
function openSocket() {
    if (!hasConnect) {
        var wSocketG = new WebSocket('wss://localhost:8443/bio/');
        wSocketG.onopen = onOpen;
        wSocketG.onclose = onClose;
    }
}
openSocket();

function onOpen() {
    hasConnect = true;
    angular.element(document.getElementsByClassName('button-login-face-scan')[0]).show();
    console.log('Socket opened');
}
function onClose() {
    hasConnect = false;
    angular.element(document.getElementsByClassName('button-login-face-scan')[0]).hide();
    console.log('Socket closed');
}

setInterval(openSocket, 10000);

app.directive("login", [ "$session", "$timeout", "$interval", "$perf", "$http", '$modal', '$eds', '$settings', '$error', '$cookie', '$uin', '$translate', 'egovOTPservice',
    function ($session, $timeout, $interval, $perf, $http, $modal, $eds, $settings, $error, $cookie, $uin, $translate, egovOTPservice) {
        return {
            restrict: "E",
            scope: true,
            replace: true,
            templateUrl: "kit/directives/login/login.html",
            controller: function ($scope, $element) {
                var app = egovOTPservice.initApp($scope.app);
                $scope.bioStatus = '';
                $scope.errorMessage = false; //Сообщение о том что пользователь не зарегистрирован, по умолчанию не показываем
                $scope.regStatus = false; //Переменная для показа блока Ввода ИИН, по умолчанию не показываем
                $scope.phone = null;
                $scope.isResend = true;
                $scope.isSMS = false;
                $scope.code = '';
                $scope.iin = '';

                $scope.showModal = function () {

                    $modal.show('authModal', function () {
                        $eds.reset('auth');
                    });

                    $eds.open('auth',{
                        onCert: function(){
                            $http.get("rest/login/xml")
                                .success(function (data) {
                                    $eds.apply('auth', data);
                                }).error(function (rs, status) {
                                $error.setError('serverError');
                            });
                        },
                        onSign: function(signedXML) {
                            $http.post("rest/login/eds", { "edsXml": signedXML }, {withCredentials: true})
                                .success(function (data) {
                                    $cookie.setTo('SSO', data.ssoHash, '/');
                                    $modal.hide('authModal');
                                    $session.login();
                                }).error(function (rs, status) {
                                if( status == 401 && $settings.isPod() ){
                                    $error.setError('notOperatorLogin');
                                } else {
                                    $error.setError('serverError');
                                }
                                $modal.hide('authModal');
                            });
                        },
                        onError: function(){
                            $modal.hide('authModal');
                            console.error('Error while applying signature');
                        },
                        onCancel: function(){
                            $modal.hide('authModal');
                        }
                    });
                };

                function setDefault() {
                    $scope.bioStatus = '';
                    $scope.errorMessage = false; //Сообщение о том что пользователь не зарегистрирован, по умолчанию не показываем
                    $scope.regStatus = false; //Переменная для показа блока Ввода ИИН, по умолчанию не показываем
                    $scope.phone = null;
                    $scope.isResend = true;
                    $scope.isSMS = false;
                    $scope.code = '';
                    $scope.iin = '';
                }

                $scope.showBioModal = function () {
                    // if (hasConnect) {
                    setDefault();
                    $modal.show('bioAuthModal');
                    // } else {
                    //     $modal.show('bioScannerError');
                    // }
                };

                // Старт био-сканера
                $scope.startScan = function (iin) {
                    $scope.setBioScanStatus(null);
                    var regexpUin = new RegExp('^\\d{12}$');
                    var wSocket = new WebSocket("wss://localhost:8443/bio/");

                    wSocket.onmessage = function (event) {
                        console.log('Received response from Bio scanner');
                        if (regexpUin.test(event.data)) {
                            console.log('Bio scan found IIN ' + event.data);
                            $scope.checkRegMBC(event.data);
                        } else {
                            switch (event.data){
                                case "1": $scope.checkRegMBC(iin); break;
                                case "0": $scope.setBioScanStatus('0'); break;
                                case "3": $scope.setBioScanStatus('3'); break;
                                default : $scope.setBioScanStatus('-1');
                            }
                            $scope.$apply();
                        }
                    };

                    wSocket.onerror = function (error) {
                        console.log('Received error response from Bio scanner');
                        $scope.setBioScanStatus('-1');
                        $scope.$apply();
                    };

                    wSocket.onopen = function (event) {
                        $modal.hide('bioAuthModal');
                        $modal.show('bioAuthStatusWait');
                        var iinToSend = iin;
                        if (!regexpUin.test(iinToSend)) {
                            iinToSend = '000000000000';
                        }
                        wSocket.send(iinToSend);
                        console.log('Sent IIN to Bio scanner', iinToSend);
                        $scope.bioStatus = '';
                        $scope.$apply();
                    };

                    wSocket.onclose  = function (event) {
                        $modal.hide('bioAuthModal');
                        $modal.show('bioScannerError');
                        $scope.$apply();
                    };
                };

                $scope.setBioScanStatus = function (status) {
                    $scope.bioStatus = status;
                };

                // Проверка номера в МБГ
                $scope.checkRegMBC = function (iin) {
                    egovOTPservice.checkRegMBC(app, iin)
                        .then(function (rs) {
                            if(rs.data.errCode === 0){ //Проверка успешно выполнено, пользователь зарегистрирован в МБГ
                                $scope.regStatus = true; //Пользователь зарегистрирован в МБГ, показываем блок отправки кода
                                $scope.phone = "*******" + rs.data.phone.substr(rs.data.phone.length-4, 4); //На ПОДе показываем только последние 4 цифры
                                $scope.newCode(iin);
                            }else if (rs.data.errCode == 1) { //У пользователя нет зарегистрированных телефонов
                                $scope.errorMessage = true;//Пользователь НЕ зарегистрирован в МБГ, показываем сообщение что пользователь не зарегистрирован
                                $scope.setBioScanStatus('2');
                            }else if (rs.data.errCode == 2) {
                                $error.setError('serverError'); //При запросе в МБГ произошла ошибка
                            }
                        });
                };

                // Отправка одноразового пароля СМС-ом
                $scope.newCode = function (iin) {
                    $scope.iin = iin;
                    $scope.isResend = false;
                    egovOTPservice.newCode(app, iin)
                        .then(function (rs, status) {
                            //console.log(JSON.stringify(rs.data));
                            if (rs.data.errCode === 0) { //Код успешно отправлен пользователю
                                $scope.isResend = true; //Если тру то показать сообщение "Не пришло СМС?"
                                $scope.isSMS = true; //Код успешно отправлен, можно показывать блок ввода смс кода
                                $scope.setBioScanStatus('1');
                            } else if (rs.data.errCode === 1) { //У пользователя нет зарегистрированных телефонов
                                $scope.errorMessage = true;//Пользователь НЕ зарегистрирован в МБГ, показываем сообщение что пользователь не зарегистрирован
                                $scope.setBioScanStatus('2');
                            } else if (rs.data.errCode === 2) {
                                $error.setError('serverError'); //При отправке СМС произошла ошибка
                            }
                        });
                };

                // Проверка одноразового пароля
                $scope.checkCode = function(code) {
                    if (egovOTPservice.validateCallBack) {
                        egovOTPservice.validateCallBack($scope.iin).then(function () {
                            checkCode(code);
                        });
                    } else {
                        checkCode(code);
                    }
                };

                function checkCode(code){
                    $http.get('rest/otp/check?uin=' + $scope.iin + '&code=' + code)
                        .success(function (data) {
                            if (data.valid) {
                                $scope.auth($scope.iin);
                            } else {
                                $error.setError('login.badCode');
                            }
                        }).error(function (rs, status) {
                        $error.setError('serverError');
                    });
                }

                $scope.getSentText = function () {
                    return $translate.translate('login.optSent').replace('phone_number', $scope.phone);
                };

                // Авторизация
                $scope.auth = function (iin) {
                    $http.get("rest/login/biometric/" + iin)
                        .success(function (data) {
                            $cookie.setTo('SSO', data.ssoHash, '/');
                            $modal.hide('bioAuthStatusWait');
                            $scope.iin = '';
                            $session.login();
                        }).error(function (rs, status) {
                        $error.setError('serverError');
                    });
                };
            },
            link: function (scope) {}
        }
    }]);