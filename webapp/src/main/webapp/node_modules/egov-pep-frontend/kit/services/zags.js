angular.module("app").service('$zags', ['$http', '$q', '$error', '$robot', function ($http, $q, $error, $robot) {

    this.validateRelation = function (relationTo, relationType, relationFrom) {

        relationType = relationType.toUpperCase();

        if (!_.contains(['CHILD', 'SPOUSE'], relationType)) {
            console.error("Отношение родственника типа " + relationType + " неопределено");
        }

        var defer = $q.defer();

        $http.get("rest/zags/" + relationType.toLowerCase() + "/" + relationTo + "/" + relationFrom)
            .success(function (data) {
                var prop = {CHILD: 'isChild', SPOUSE: 'isMarried'}[relationType];
                if (data[prop]) {
                    defer.resolve();
                } else {
                    defer.reject('zags.' + prop);
                }
            })
            .error(function (rs) {
                $error.setError("zags.noConnection");
                $robot.connectionError();
                defer.reject('zags.noConnection');
            });

        return defer.promise;
    };


    return this;
}]);
