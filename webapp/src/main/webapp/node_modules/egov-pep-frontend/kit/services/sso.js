angular.module("app").service('$sso', ['$rootScope', '$http', '$q', '$settings', '$cookie', '$timeout', '$error', function ($rootScope, $http, $q, $settings, $cookie, $timeout, $error) {

    $rootScope.$sso = this;

    var self = this;
    // var interval = 90000;//15 минут, так сказал разработчик sso (Сергей Ролич)
    // this.init = function () {
    //     var prevPing = $cookie.get("lttping");
    //     if (_.isEmpty(prevPing)) {
    //         $timeout(self.getData, 0);
    //     } else {
    //         delta = new Date().getTime() - prevPing;
    //         $timeout(self.getData, delta <= interval ? interval - delta :  0);
    //     }
    // };

    // var ssoBaseUrl = "";
	// if ($settings.isPep()) {
	// 	$http.get('rest/sso/base-url').then(function (rs) {
	// 		ssoBaseUrl = rs.data;
	// 	}, function(){
	// 		console.error("SSO URL ERROR");
	// 	});
	// }

    // this.getSsoBaseUrl = function(){
    //     return ssoBaseUrl;
    // };

    // this.getData = function () {
    //
    //     if (ssoBaseUrl && $settings.isPep()) {
    //         $.ajax(ssoBaseUrl + "keepalive", {
    //             type: "GET",
    //             contentType: "text/plain; charset=utf-8",
    //             xhrFields: {withCredentials: true},
    //             crossDomain: true,
    //             success: function (response) {
    //                 $cookie.setTo("lttping", new Date().getTime(), "/");
    //                 if (response == "true") self.timeout();
    //             },
    //             error: function () {
    //                 $cookie.setTo("lttping", new Date().getTime(), "/");
    //                 self.timeout();
    //             }
    //         });
    //     }
    // };

    // this.timeout = function () {
    //     setTimeout(self.getData, interval);
    // };

    // self.init();

    var ssoLoginUrl = "";
	if ($settings.isPep()) {
		$http.get('rest/sso/url').then(function (rs) {
			ssoLoginUrl = rs.data;
		}, function(){
			//$error.setError("ssoUrlError");
			console.error("SSO URL ERROR");
		});
	}

    this.getSsoLoginUrl = function(){
        return ssoLoginUrl;
    };

    this.goLoginPage = function(nl){
        location.href = ssoLoginUrl;
    };

    return this;
}]);
